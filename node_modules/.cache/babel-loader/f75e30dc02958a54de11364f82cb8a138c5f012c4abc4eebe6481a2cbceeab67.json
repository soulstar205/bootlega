{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Travelmania\\\\Documents\\\\React-Resource\\\\bootlega\\\\src\\\\context\\\\searchContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchContext = /*#__PURE__*/createContext();\nexport const SearchProvider = props => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const FetchFunction = async () => {\n    setLoading(true);\n    let search = await axios.post(`https://bootlegga-backend-44mixyrgt-soulstar205.vercel.app/${props}`);\n    if (search) {\n      setMovies([...search.data.result]);\n      setLoading(false);\n    } else {\n      setError('Movie not found, try a different search term');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: {\n      movies,\n      loading,\n      setLoading,\n      FetchFunction\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchProvider, \"dmxd01EY4PCYRsVQeNi5p1Nxs2o=\");\n_c = SearchProvider;\nvar _c;\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","SearchContext","SearchProvider","props","movies","setMovies","loading","setLoading","error","setError","FetchFunction","search","post","data","result","children"],"sources":["C:/Users/Travelmania/Documents/React-Resource/bootlega/src/context/searchContext.js"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const SearchContext = createContext()\r\n\r\nexport const SearchProvider = (props)=>{\r\n    const [movies, setMovies] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n\r\n    const FetchFunction = async () => {\r\n        setLoading(true)\r\n        let search = await axios.post(`https://bootlegga-backend-44mixyrgt-soulstar205.vercel.app/${props}`)\r\n        if(search){\r\n            setMovies([...search.data.result])\r\n            setLoading(false)\r\n        }else{\r\n            setError('Movie not found, try a different search term')\r\n            setLoading(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <SearchContext.Provider value={{movies, loading, setLoading, FetchFunction}}>\r\n            {props.children}\r\n        </SearchContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,EAAE;AAE5C,OAAO,MAAMK,cAAc,GAAIC,KAAK,IAAG;EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAMW,aAAa,GAAG,YAAY;IAC9BH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAII,MAAM,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAE,8DAA6DT,KAAM,EAAC,CAAC;IACpG,IAAGQ,MAAM,EAAC;MACNN,SAAS,CAAC,CAAC,GAAGM,MAAM,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC;MAClCP,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,MAAI;MACDE,QAAQ,CAAC,8CAA8C,CAAC;MACxDF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACI,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACH,MAAM;MAAEE,OAAO;MAAEC,UAAU;MAAEG;IAAa,CAAE;IAAA,UACvEP,KAAK,CAACY;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAEjC,CAAC;AAAA,GAvBYb,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}